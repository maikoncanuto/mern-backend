name: ci-feature

on:
  push:
    branches:
      - 'feature/**'

env:
  ENV_CHECKOUT_CACHE: 'npm'
  ENV_NODE_VERSION: '16.x'
  ENV_REGISTRY_URL: 'https://npm.pkg.github.com'
  ENV_NODE_ENV: 'development'
  ENV_GIT_USERNAME: 'Filipe Santos'
  ENV_GIT_EMAIL: 'filipe.l.santos@galp.com'

jobs:

  scan-git:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate if commit follows the pattern in description "#<number> - description"
        run: |
          if ! git log -1 --pretty=%B | grep -qE '.+'; then
            echo "Error: Commit description does not follow the pattern 'description'"
            exit 1
          fi

  scan-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Validate package.json
        run: |
          PACKAGE_NAME=$(cat package.json | jq -r '.name')
          PRIVATE=$(cat package.json | jq -r '.private')
          PUBLISH_CONFIG=$(cat package.json | jq '.publishConfig')
          REPOSITORY=$(cat package.json | jq '.repository')

          if [[ ! ${PACKAGE_NAME} =~ ^@[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+$ ]]; then
            echo "Error: attribute name is not in the format @<company>/<name>"
            exit 1
          fi

          if [[ ${PUBLISH_CONFIG} == "null" ]]; then
            echo "Error: publishConfig is required"
            exit 1
          fi

          if [[ ${REPOSITORY} == "null" ]]; then
            echo "Error: repository is required"
            exit 1
          fi

          if [[ ${PRIVATE} == "true" ]]; then
            echo "Warning: private attribute is set to true, changing to false"
            jq '.private = false' package.json > package.json.tmp && mv package.json.tmp package.json
          fi

  scan-packages:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Scan Packages
        run: npm audit
        env:
          CI: true

  change-version:
    needs: [ scan-git, scan-config, scan-packages ]
    timeout-minutes: 1
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.ENV_NODE_VERSION }}

      - name: Configure git
        run: |
          git config --global user.name ${{ env.ENV_GIT_USERNAME }}
          git config --global user.email ${{ env.ENV_GIT_EMAIL }}

      - name: Change version package.json for feature-prerelease
        run: npm version prerelease

      - name: Push changes
        run: git push

  packages:
    needs: [ change-version ]
    timeout-minutes: 1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.ENV_NODE_VERSION }}

      - name: Install dependencies
        run: npm ci --force

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

  quality-eslint:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    needs: [ packages ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.ENV_NODE_VERSION }}

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  quality-test-unit:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    needs: [ packages ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.ENV_NODE_VERSION }}

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run test

  quality-test-integration:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    needs: [ packages ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.ENV_NODE_VERSION }}

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run test:e2e

  quality-test-coverage:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    needs: [ packages ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.ENV_NODE_VERSION }}

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        run: npm ci

      - name: Coverage
        run: npm run test:cov
