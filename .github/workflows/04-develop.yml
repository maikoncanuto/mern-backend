name: ci-develop

on:
  workflow_run:
    workflows: ["ci-code-review"]
    types: 
      - completed

concurrency:
  group: 'ci-develop-${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

env:
  ENV_CHECKOUT_CACHE: 'npm'
  ENV_NODE_VERSION: '18.x'
  ENV_REGISTRY_URL: 'https://npm.pkg.github.com'
  ENV_NODE_ENV: 'development'
  ENV_GIT_USERNAME: 'Filipe Santos'
  ENV_GIT_EMAIL: 'filipe.l.santos@galp.com'

jobs:
  build-and-push-package:
    timeout-minutes: 6
    runs-on: ubuntu-latest
    needs: [quality-test-unit, quality-test-integration, quality-test-coverage]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global user.name ${{ env.ENV_GIT_USERNAME }}
          git config --global user.email ${{ env.ENV_GIT_EMAIL }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.ENV_NODE_VERSION }}'

      - name: Get name branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: >-
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Get Package Version
        run: |
          export VERSION=$(node -p "require('./package.json').version")-snapshot
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update version package.json
        run: |
          npm version ${{ env.VERSION }}

      - name: Install Dependencies
        run: npm ci --force

      - name: Build Artifact
        run: npm run build
        env:
          NODE_ENV: '${{ env.ENV_NODE_ENV }}'

      - name: Publish Artifact to Github Packages
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.ENV_NODE_VERSION }}'
          registry-url: '${{ env.ENV_REGISTRY_URL }}'
          scope: '${{ github.repository_owner }}'
      - run: npm ci --force

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  build-and-push-image:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build-and-push-package]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Package Version
        run: |
          export VERSION=$(node -p "require('./package.json').version")-snapshot
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: '${{ github.actor }}'
          password: '${{ secrets.GITHUB_TOKEN }}'

      - name: 'Extract metadata (tags, labels) for Docker'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: 'ghcr.io/${{ github.repository }}'
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},value=v${{ env.VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: '${{ steps.meta.outputs.tags }}'
          labels: '${{ steps.meta.outputs.labels }}'